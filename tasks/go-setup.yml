  - debug: msg="home={{ lookup('env', 'HOME') }}"
   
  - name: check current golang version
    command: bash -c "/usr/local/go/bin/go version|sed -e 's/go version go//g'|cut -d' ' -f1"
    ignore_errors: yes
    register: go_version
    changed_when: false
 
  - debug: msg="go_version={{go_version.stdout}}"
  - debug: msg="new_go_version={{go_version}}"
 
  - name: continue only when version is older
    fail: msg="Version already exists"
    when: go_version.stdout != "" and "go_version.stdout | version_compare('{{go_version}}', operator='ge', strict=True)"
 
  - debug: msg="continuing with installation"
 
  - name: download golang tar 
    get_url:
      url: "https://storage.googleapis.com/golang/go{{go_version}}.linux-amd64.tar.gz"
      dest: "/tmp/go.tar.gz"
      mode: 0440
     
  - name: Remove old installation of Go
    file:
      path: /usr/local/go
      state: absent
    become: yes
 
  - name: Extract the Go tarball
    unarchive:
      src: "/tmp/go.tar.gz"
      dest: /usr/local
      copy: no
    become: yes
 
  - name: create go directories in home
    file:
      path: "{{item}}"
      state: directory
      mode: 0775
    with_items:
    - "{{ lookup('env', 'HOME') }}/go"
    - "{{ lookup('env', 'HOME') }}/go/bin"
